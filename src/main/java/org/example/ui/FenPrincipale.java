/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.ui;

import org.example.io.ManipFichier;
import org.example.modele.Employe;
import org.example.modele.RegistreEmploye;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

/**
 * @author lafon
 */
public class FenPrincipale extends javax.swing.JFrame {
    RegistreEmploye registre;

    /**
     * Creates new form FenPrincipale
     */
    public FenPrincipale() {
        initComponents();
    }

    public FenPrincipale(RegistreEmploye registre) {
        this();
        this.registre = registre;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDepartement = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtNom = new javax.swing.JTextField();
        txtPrenom = new javax.swing.JTextField();
        txtSalaire = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        btnQuitter = new javax.swing.JButton();
        btnAjouter = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        btnAfficher = new javax.swing.JButton();
        btnAfficherRequet = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtRequeteDept = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtRequeteSal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnSupprimerEmploye = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        chkNom = new javax.swing.JCheckBox();
        chkPrenom = new javax.swing.JCheckBox();
        chkEmail = new javax.swing.JCheckBox();
        chkDepartement = new javax.swing.JCheckBox();
        chkSalaire = new javax.swing.JCheckBox();
        txtIdAModifier = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Exercice2 JBDC");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(507, 507, 507)
                                .addComponent(jLabel1)
                                .addContainerGap(537, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Entrer les informations :", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel2.setText("Prénom :");

        jLabel3.setText("Nom :");

        jLabel4.setText("Émail :");

        jLabel5.setText("Département :");

        jLabel6.setText("Salaire :");

        txtDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartementActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomActionPerformed(evt);
            }
        });

        txtPrenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrenomActionPerformed(evt);
            }
        });

        txtSalaire.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtSalaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalaireActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDepartement, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                        .addComponent(txtEmail)
                                        .addComponent(txtNom)
                                        .addComponent(txtPrenom)
                                        .addComponent(txtSalaire))
                                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(16, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(txtPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(txtDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(txtSalaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnQuitter.setText("Quitter");
        btnQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitterActionPerformed(evt);
            }
        });

        btnAjouter.setText("Ajouter à la base de donnée");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnAfficher.setText("Afficher la base de donnée");
        btnAfficher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfficherActionPerformed(evt);
            }
        });

        btnAfficherRequet.setText("Afficher la requête");
        btnAfficherRequet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfficherRequetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnAjouter)
                                .addGap(104, 104, 104)
                                .addComponent(btnModifier)
                                .addGap(204, 204, 204)
                                .addComponent(btnAfficherRequet)
                                .addGap(128, 128, 128)
                                .addComponent(btnAfficher)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnQuitter)
                                .addGap(25, 25, 25))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnQuitter)
                                        .addComponent(btnAjouter)
                                        .addComponent(btnModifier)
                                        .addComponent(btnAfficher)
                                        .addComponent(btnAfficherRequet))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID", "Prénom :", "Nom :", "Émail :", "Département :", "Salaire :"
                }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setText("Entrer le nom du Département :");

        jLabel8.setText("Saisir le salaire :");

        jLabel9.setText("Enrtrer le ID pour la suppression :");

        btnSupprimerEmploye.setText("DANGER Supprimer de la base de donnée");
        btnSupprimerEmploye.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerEmployeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtRequeteSal, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                                        .addComponent(txtRequeteDept))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(62, 62, 62))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(btnSupprimerEmploye)
                                                .addGap(44, 44, 44))))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(txtRequeteDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(txtRequeteSal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnSupprimerEmploye))
                                .addGap(18, 18, 18))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Modification à effectuer"));

        jLabel10.setText("ID à modifier :");

        chkNom.setText("Nom");
        chkNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNomActionPerformed(evt);
            }
        });

        chkPrenom.setText("Prénom");
        chkPrenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPrenomActionPerformed(evt);
            }
        });

        chkEmail.setText("Émail");
        chkEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEmailActionPerformed(evt);
            }
        });

        chkDepartement.setText("Département");
        chkDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDepartementActionPerformed(evt);
            }
        });

        chkSalaire.setText("Salaire");
        chkSalaire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSalaireActionPerformed(evt);
            }
        });

        txtIdAModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdAModifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chkEmail)
                                        .addComponent(chkSalaire)
                                        .addComponent(chkDepartement)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(2, 2, 2)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtIdAModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(chkNom)
                                        .addComponent(chkPrenom))
                                .addGap(68, 77, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(chkPrenom)
                                .addGap(18, 18, 18)
                                .addComponent(chkNom)
                                .addGap(18, 18, 18)
                                .addComponent(chkEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkDepartement)
                                .addGap(18, 18, 18)
                                .addComponent(chkSalaire)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel10)
                                        .addComponent(txtIdAModifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1)
                                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(22, 22, 22))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)))
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrenomActionPerformed

    }//GEN-LAST:event_txtPrenomActionPerformed

    private void txtNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomActionPerformed

    }//GEN-LAST:event_txtNomActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed

    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartementActionPerformed

    }//GEN-LAST:event_txtDepartementActionPerformed

    private void txtSalaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalaireActionPerformed

    }//GEN-LAST:event_txtSalaireActionPerformed

    private void btnQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitterActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnQuitterActionPerformed

    /**
     *
     * @param evt
     */
    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        try {
            Employe emp = new Employe(0, txtNom.getText(), txtPrenom.getText(), txtEmail.getText(),
                    txtDepartement.getText(), Double.parseDouble(txtSalaire.getText()));

            registre.ajouterEmploye(emp);


            //----------------------------------------------------------------ajouter un employe dans la base de donnée
            try {
                registre.ajouterEmployeJDBC(emp.getPrenom(), emp.getNom(), emp.getEmail(), emp.getDepartement(), emp.getSalaire());
                JOptionPane.showMessageDialog(null, "Employé sauvegardé dans la base de donnée avec succès. \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                viderChamp();
            } catch (SQLException e) {
                System.out.println("Erreur");
                e.printStackTrace();
            }

        } catch (NumberFormatException a) {
            JOptionPane.showMessageDialog(null, "Veuillez saisir toute les information demandé! \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnAjouterActionPerformed

    private void viderChamp() {
        txtNom.setText("");
        txtPrenom.setText("");
        txtEmail.setText("");
        txtDepartement.setText("");
        txtSalaire.setText("");

    }


    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        String colonne;
        try {
            if (chkNom.isSelected()) {
                int paraId = Integer.parseInt(txtIdAModifier.getText());
                String paraNom = txtNom.getText();
                colonne = "nom";
                boolean statut = validerNom();
                if (statut) {
                    try {
                        modifierEmployeByID(colonne, paraNom, paraId);
                        JOptionPane.showMessageDialog(null, "Nom de l'employé modifié  avec succès. \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Svp saisir l'id de l'employé à modifier \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }

        try {
            if (chkPrenom.isSelected()) {
                int paraId = Integer.parseInt(txtIdAModifier.getText());
                String paraPrenom = txtPrenom.getText();
                colonne = "prenom";
                boolean statut1 = validerPrenom();
                if (statut1) {
                    try {
                        modifierEmployeByID(colonne, paraPrenom, paraId);
                        JOptionPane.showMessageDialog(null, "Le Prénom de l'employé modifié  avec succès. \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Svp saisir l'id de l'employé à modifier \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }


        try {
            if (chkEmail.isSelected()) {
                int paraId = Integer.parseInt(txtIdAModifier.getText());
                String paraEmail = txtEmail.getText();
                colonne = "email";
                boolean statut2 = validerEmail();
                if (statut2) {
                    try {
                        modifierEmployeByID(colonne, paraEmail, paraId);
                        JOptionPane.showMessageDialog(null, "L'Émail de l'employé modifié  avec succès. \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Svp saisir l'id de l'employé à modifier \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }


        try {
            if (chkDepartement.isSelected()) {
                int paraId = Integer.parseInt(txtIdAModifier.getText());
                String paraDepartement = txtDepartement.getText();
                colonne = "departement";
                boolean statut3 = validerDepartement();
                if (statut3) {
                    try {
                        modifierEmployeByID(colonne, paraDepartement, paraId);
                        JOptionPane.showMessageDialog(null, "Le département de l'employé modifié  avec succès. \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Svp saisir l'id de l'employé à modifier \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }

        try {
            if (chkSalaire.isSelected()) {
                int paraId = Integer.parseInt(txtIdAModifier.getText());
                double paraSalaire = Double.parseDouble(txtSalaire.getText());
                colonne = "salaire";
                boolean statut4 = validerSalaire();
                if (statut4) {
                    try {
                        modifierEmployeByID(colonne, paraSalaire, paraId);
                        JOptionPane.showMessageDialog(null, "Le salaire de l'employé modifié  avec succès. \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }


                }


            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Svp saisir l'id de l'employé à modifier \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }
        decocherCheckBox();
        txtIdAModifier.setText("");
        viderChamp();


    }//GEN-LAST:event_btnModifierActionPerformed

    private boolean validerSalaire() {
        boolean flag = true;
        if (txtSalaire.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le salaire est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        return flag;

    }

    private boolean validerDepartement() {
        boolean flag = true;
        if (txtDepartement.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le Département est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        return flag;
    }

    private boolean validerEmail() {
        boolean flag = true;
        if (txtEmail.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! L'émail' est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        return flag;

    }

    private boolean validerNom() {
        boolean flag = true;
        if (txtNom.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le nom est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        return flag;
    }

    private boolean validerPrenom() {
        boolean flag = true;
        if (txtPrenom.getText().isEmpty()) {
            flag = false;
            JOptionPane.showMessageDialog(null, "Hey oui !! Le Prénom est obligatoire !",
                    "Saisie de valeurs",
                    JOptionPane.ERROR_MESSAGE);
        }

        return flag;
    }

    private void decocherCheckBox() {
        chkNom.setEnabled(true);
        chkNom.setSelected(false);
        chkPrenom.setEnabled(true);
        chkPrenom.setSelected(false);
        chkEmail.setEnabled(true);
        chkEmail.setSelected(false);
        chkDepartement.setEnabled(true);
        chkDepartement.setSelected(false);
        chkSalaire.setEnabled(true);
        chkSalaire.setSelected(false);
    }

    private void modifierEmployeByID(String colonne, String para, int para_id) throws SQLException {
        Connection connection = null;
        PreparedStatement prepareStatement = null;
        String query = null;

        System.out.println("Connexion à la bd...");
        connection =
                DriverManager.getConnection("jdbc:mysql://localhost:3306/exercice2", "root",
                        "Lareaultlaval7");


        query = "UPDATE employe set " + colonne + " = '" + para + "' WHERE id = " + para_id;
        System.out.println("Update d'un enregistrement colonne : " + colonne);
        prepareStatement = connection.prepareStatement(query);
        prepareStatement.executeUpdate(query);


        System.out.println("Mise a jour effectuée : " + prepareStatement);

        System.out.println("Fermeture des connexion...");
        prepareStatement.close();
        connection.close();


    }

    private void modifierEmployeByID(String colonne, double para, int para_id) throws SQLException {
        Connection connection = null;
        PreparedStatement prepareStatement = null;
        String query = null;

        System.out.println("Connexion à la bd...");
        connection =
                DriverManager.getConnection("jdbc:mysql://localhost:3306/exercice2", "root",
                        "Lareaultlaval7");


        query = "UPDATE employe set " + colonne + " = " + para + " WHERE id = " + para_id;
        System.out.println("Update d'un enregistrement colonne : " + colonne);
        prepareStatement = connection.prepareStatement(query);
        prepareStatement.executeUpdate(query);


        System.out.println("Mise a jour effectuée : " + prepareStatement);

        System.out.println("Fermeture des connexion...");
        prepareStatement.close();
        connection.close();


    }

    private void btnAfficherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfficherActionPerformed

        //---------------------------------------------------------afficher dans l'interface
        try {
            afficherBD();
        } catch (SQLException sqlException) {
            System.out.println(sqlException);
        }
        //---------------------------------------------------------afficher dans l'interface


        //---------------------------------------------------------afficher dans console
        try {
            ManipFichier.afficherTableEmploye();

        } catch (SQLException sqlException) {
            System.out.println(sqlException);
        }
        //---------------------------------------------------------afficher dans console


    }//GEN-LAST:event_btnAfficherActionPerformed

    private void afficherBD() throws SQLException {
        viderTable();

        Connection connection = null;
        PreparedStatement prepareStatement = null;
        String query = null;


        System.out.println("Connexion établie avec succès avec la bd MySQL ....\n");

        connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/exercice2", "root",
                "Lareaultlaval7");


        query = "SELECT * FROM employe";


        prepareStatement = connection.prepareStatement(query);
        ResultSet resultSet = prepareStatement.executeQuery();

        while (resultSet.next()) {

            int id = resultSet.getInt(1);
            String prenom = resultSet.getString(2);
            String nom = resultSet.getString(3);
            String email = resultSet.getString(4);
            String departement = resultSet.getString(5);
            double salaire = resultSet.getDouble(6);


            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{id, prenom, nom, email, departement, salaire});
        }


        System.out.println("\nFermeture de la connexion...");
        resultSet.close();
        prepareStatement.close();
        connection.close();


    }

    private void viderTable() {
        txtRequeteDept.setText("");
        txtRequeteSal.setText("");
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }

    private void btnAfficherRequetActionPerformed(java.awt.event.ActionEvent evt) throws NumberFormatException {//GEN-FIRST:event_btnAfficherRequetActionPerformed

        try {
            double para_salaire = Double.parseDouble(txtRequeteSal.getText());
            String para_dept = txtRequeteDept.getText();

            //---------------------------------------------------------afficher dans l'interface
            try {
                afficherResultatInterface(para_salaire, para_dept);
            } catch (SQLException sqlException) {
                System.out.println(sqlException);
            } catch (NumberFormatException e) {
                System.out.println("Erreur");
            }
            //---------------------------------------------------------afficher dans l'interface


            //---------------------------------------------------------afficher dans console
            try {
                ManipFichier.afficherResultatQuestion(para_salaire, para_dept);
            } catch (SQLException sqlException) {
                System.out.println(sqlException);
            }
        } catch (NumberFormatException a) {
            JOptionPane.showMessageDialog(null, "Veuillez entrer Le département et le salaire recherché ! \n", "Erreur de saisie", JOptionPane.ERROR_MESSAGE);
        }
        //---------------------------------------------------------afficher dans console


    }//GEN-LAST:event_btnAfficherRequetActionPerformed

    private void btnSupprimerEmployeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerEmployeActionPerformed
        try {
            int para_id = Integer.parseInt(txtID.getText());

            try {
                supprimerEmploye(para_id);
                JOptionPane.showMessageDialog(null, "Employé supprimer de la base de donnée aves succès \n", "Succès", JOptionPane.INFORMATION_MESSAGE);
                txtID.setText("");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        } catch (NumberFormatException a) {
            JOptionPane.showMessageDialog(null, "Veuillez saisir un nombre entier pour le id de l'employé à supprimer \n", "Erreur de saisie", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnSupprimerEmployeActionPerformed

    private void chkNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkNomActionPerformed

    private void txtIdAModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdAModifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdAModifierActionPerformed

    private void chkPrenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPrenomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPrenomActionPerformed

    private void chkEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkEmailActionPerformed

    private void chkDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDepartementActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkDepartementActionPerformed

    private void chkSalaireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSalaireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSalaireActionPerformed

    private void supprimerEmploye(int para_id) throws SQLException {
        Connection connection = null;
        PreparedStatement prepareStatement = null;//pour des raisons de sécurité, évite les sql injection
        String query = null;

        System.out.println("Connexion à la bd...");
        connection =
                DriverManager.getConnection("jdbc:mysql://localhost:3306/exercice2", "root",
                        "Lareaultlaval7");


        System.out.println("Supression de l'employé de avec le ID : " + para_id);
        query = "DELETE FROM employe WHERE id = " + para_id;
        prepareStatement = connection.prepareStatement(query);
        prepareStatement.executeUpdate(query);


        System.out.println("Fermeture des connexion...");
        prepareStatement.close();
        connection.close();


    }

    private void afficherResultatInterface(double paraSalaire, String paraDept) throws SQLException,
            NumberFormatException {
        viderTable();

        Connection connection = null;
        PreparedStatement prepareStatement = null;
        String query = null;


        System.out.println("Connexion établie avec succès avec la bd MySQL ....\n");

        connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/exercice2", "root",
                "Lareaultlaval7");


        query = "SELECT * FROM employe WHERE salaire > " + paraSalaire + " AND departement like '" + paraDept + "'";


        prepareStatement = connection.prepareStatement(query);
        ResultSet resultSet = prepareStatement.executeQuery();

        while (resultSet.next()) {
            int id = resultSet.getInt(1);
            String prenom = resultSet.getString(2);
            String nom = resultSet.getString(3);
            String email = resultSet.getString(4);
            String departement = resultSet.getString(5);
            double salaire = resultSet.getDouble(6);


            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{id, prenom, nom, email, departement, salaire});

        }


        System.out.println("\nFermeture de la connexion...");
        resultSet.close();
        prepareStatement.close();
        connection.close();


    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAfficher;
    private javax.swing.JButton btnAfficherRequet;
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnQuitter;
    private javax.swing.JButton btnSupprimerEmploye;
    private javax.swing.JCheckBox chkDepartement;
    private javax.swing.JCheckBox chkEmail;
    private javax.swing.JCheckBox chkNom;
    private javax.swing.JCheckBox chkPrenom;
    private javax.swing.JCheckBox chkSalaire;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDepartement;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIdAModifier;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtPrenom;
    private javax.swing.JTextField txtRequeteDept;
    private javax.swing.JTextField txtRequeteSal;
    private javax.swing.JFormattedTextField txtSalaire;
    // End of variables declaration//GEN-END:variables
}
